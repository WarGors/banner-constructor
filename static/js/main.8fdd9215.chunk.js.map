{"version":3,"sources":["components/bgColor/bgColor.js","components/drawer/drawer.js","components/header/header.js","components/imagesList/imagesList.js","components/textCreator/textCreator.js","components/bannerPreview/Preview.js","components/bannerCreator/BannerCreator.js","App.js","index.js"],"names":["BgColor","props","className","type","checked","gradient","onChange","toggleGradient","style","width","value","gradientAngle","disabled","angleChangeHandler","color","colorChangeHandler","colorGradient","gradientChangeHandler","Drawer","drawer","isCopyed","Header","ref","inputLink","placeholder","onClick","setLink","copyHTML","copyConfig","saveImage","images","ImagesList","map","img","index","setImage","src","alt","TextCreator","textColor","textColorChangeHandler","text","textChangeHandler","Prewiew","textContainerStyle","margin","fontSize","fontWeight","fontFamily","height","overflow","wordWrap","whiteSpace","href","link","banner","textAlign","paddingTop","display","textDecoration","background","marginTop","id","initialState","BannerCreator","useRef","useState","state","setState","setStateHandler","key","prevState","copyItemHandler","item","navigator","clipboard","writeText","setTimeout","parseFloat","backgroundColor","config","image","name","onSubmit","e","preventDefault","target","current","outerHTML","JSON","stringify","domtoimage","toJpeg","quality","then","dataUrl","document","createElement","download","click","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8fdd9215.chunk.js","sourcesContent":["import './bgColor.css'\r\n\r\nconst BgColor = props => {\r\n  return (\r\n    <div className='bgc-container'>\r\n      <strong className='col-header'>Настройте фон</strong>\r\n      <input \r\n        type=\"checkbox\" \r\n        checked={props.gradient} \r\n        onChange={props.toggleGradient} \r\n      />Включить градиентную заливку<br />\r\n      <div>Угол градиента: <input \r\n        style={{width: '30px'}}  \r\n        type='text' \r\n        value={props.gradientAngle}\r\n        disabled={!props.gradient}\r\n        onChange={props.angleChangeHandler} \r\n      /> deg</div>\r\n      {props.gradient ? 'Выберите цвета градиента: ' : 'Выберите цвет фона: '}<br />\r\n      <input \r\n        className='fill'\r\n        type='color' \r\n        value={props.color} \r\n        onChange={props.colorChangeHandler} \r\n      />\r\n      { \r\n        props.gradient \r\n          ? <input \r\n            className='fill'\r\n            type='color' \r\n            value={props.colorGradient} \r\n            onChange={props.gradientChangeHandler} \r\n          />\r\n          : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BgColor","import './drawer.css'\r\n\r\nconst Drawer = props => {\r\n  const drawer = `drawer ${props.isCopyed ? null : 'closed'}`\r\n  return (\r\n    <div className={drawer}>\r\n      Скопировано в буфер обмена\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Drawer","import './header.css'\r\n\r\nconst Header = props => {\r\n  \r\n  return (\r\n    <header>\r\n      <div className='input-confirm'>\r\n        <input\r\n          ref={props.inputLink} \r\n          type='text' \r\n          placeholder='Ссылка для баннера...'\r\n        />\r\n        <button onClick={props.setLink}>\r\n          Применить\r\n        </button>\r\n      </div>\r\n      <button onClick={props.copyHTML}>\r\n        Скопировать баннер\r\n      </button>\r\n      <button onClick={props.copyConfig}>\r\n        Скопировать конфигурацию\r\n      </button>\r\n      <button onClick={props.saveImage}>\r\n        Сохранить картинку\r\n      </button >\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header","import './imagesList.css'\r\n\r\nconst images = [\r\n  'https://vignette.wikia.nocookie.net/heroes-unite/images/d/d2/Disenchantment-5b8512eba1a59.png/revision/latest?cb=20181212235225', \r\n  'https://vignette.wikia.nocookie.net/heroes-unite/images/0/0b/IMG_2.png/revision/latest/scale-to-width-down/1000?cb=20201129153901', \r\n  'https://vignette.wikia.nocookie.net/heroes-unite/images/0/08/Simpsonslogo2020tm.png/revision/latest?cb=20201129154740'];\r\n\r\nconst ImagesList = props => {\r\n  return (\r\n    <>\r\n      <strong>Выберите картинку</strong>\r\n      <ul>\r\n        {\r\n          images.map((img, index) => {\r\n            return (\r\n              <li\r\n                className='list-item-img'\r\n                key={index} \r\n                onClick={() => props.setImage('img', img)}\r\n              >\r\n                <img \r\n                  src={img}\r\n                  alt={`IMG_${index + 1}`}\r\n                  width='200px'\r\n                />\r\n              </li>\r\n            )\r\n          })}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ImagesList","import './textCreator.css'\r\n\r\nconst TextCreator = props => {\r\n  return (\r\n    <div>\r\n      <strong>Выберите цвет текста</strong>\r\n      <input \r\n        className='text-color'\r\n        type='color' \r\n        value={props.textColor} \r\n        onChange={props.textColorChangeHandler} \r\n      /><br />\r\n\r\n      <textarea\r\n        placeholder={'Введите текст...'}   \r\n        type='text' \r\n        value={props.text} \r\n        onChange={props.textChangeHandler} \r\n      />\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default TextCreator","import './Preview.css'\r\n\r\nconst Prewiew = props => {\r\n\r\n  const bannerStyle = {\r\n    width: '400px',\r\n    height: '500px',\r\n    textAlign: 'center',\r\n    paddingTop: '1px',\r\n    display: 'inline-block',\r\n    textDecoration: 'none'\r\n  }\r\n\r\n  const textContainerStyle = {\r\n    margin: '30px 40px',\r\n    fontSize: '2.4em',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Tahoma, Geneva, Verdana, sans-serif',\r\n    height: '140px',\r\n    overflow: 'hidden',\r\n    wordWrap: 'break-word',\r\n    whiteSpace: 'pre-wrap',\r\n    color: props.textColor,\r\n  }\r\n\r\n  return (\r\n    <div className='content'>\r\n      <div className='wrapper'> \r\n        <a href={props.link} ref={props.banner} style={{...bannerStyle, ...props.background}}>\r\n          {props.img ? <img style={{marginTop: '40px', width: '350px'}} src={props.img} alt=''/> : null}\r\n          <div id={'text'} style={textContainerStyle}>{props.text}</div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Prewiew","import { useRef, useState } from 'react'\r\nimport BgColor from '../bgColor/bgColor'\r\nimport Drawer from '../drawer/drawer'\r\nimport Header from '../header/header'\r\nimport ImagesList from '../imagesList/imagesList'\r\nimport TextCreator from '../textCreator/textCreator'\r\nimport domtoimage from 'dom-to-image'\r\nimport Prewiew from '../bannerPreview/Preview'\r\nimport './BannerCreator.css'\r\n\r\nconst initialState = {\r\n  color: '#5AABD3',\r\n  colorGradient: '#00FF9D',\r\n  textColor: '#000000',\r\n  text: '',\r\n  img: null,\r\n  gradientAngle: 0,\r\n  link: '',\r\n  gradient: false,\r\n  isCopyed: false\r\n}\r\n\r\nconst BannerCreator = props => {\r\n  const banner = useRef(null)\r\n  const inputLink = useRef(null)\r\n\r\n  const [state, setState] = useState(initialState)\r\n\r\n  const setStateHandler = (key, value) => {\r\n    return setState(prevState => (\r\n      { ...prevState, [key]: value !== 'toggle' ? value : !prevState[key] }\r\n    ))\r\n  }\r\n\r\n  const copyItemHandler = item => {\r\n    navigator.clipboard.writeText(item)\r\n    if (state.isCopyed) return\r\n    setStateHandler('isCopyed', true)\r\n    setTimeout(() => setStateHandler('isCopyed', false), 1500)\r\n  }\r\n\r\n  const background = state.gradient \r\n    ? { background: `linear-gradient(${parseFloat(state.gradientAngle) || 0}deg, ${state.color}, ${state.colorGradient})` }\r\n    : {backgroundColor: state.color}\r\n\r\n  let config = {\r\n    textColor: state.textColor,\r\n    image: state.img,\r\n    text: state.text,\r\n    link: state.link,\r\n    ...background\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <aside>\r\n        <form name='constructor' onSubmit={e => e.preventDefault()}>\r\n          <BgColor\r\n            color={state.color} \r\n            gradient={state.gradient}\r\n            colorGradient={state.colorGradient}\r\n            gradientAngle={state.gradientAngle}\r\n            colorChangeHandler={e => setStateHandler('color', e.target.value)}\r\n            gradientChangeHandler={e => setStateHandler('colorGradient', e.target.value)}\r\n            toggleGradient={() => setStateHandler('gradient', 'toggle')}\r\n            angleChangeHandler={e => setStateHandler('gradientAngle', e.target.value)}\r\n          />\r\n          <hr />\r\n          <TextCreator \r\n            text={state.text} \r\n            textColor={state.textColor}\r\n            textColorChangeHandler={e => setStateHandler('textColor', e.target.value)}\r\n            textChangeHandler={e => setStateHandler('text', e.target.value)}\r\n          />\r\n          <hr />\r\n          <ImagesList setImage={setStateHandler}/> \r\n        </form>\r\n      </aside>\r\n      <main>\r\n        <Header\r\n          inputLink={inputLink}\r\n          copyHTML={() => copyItemHandler((banner.current.outerHTML))}\r\n          copyConfig={() => copyItemHandler(JSON.stringify(config))}\r\n          setLink={() => {\r\n            setStateHandler('link', inputLink.current.value)\r\n            inputLink.current.value = ''\r\n          }}\r\n          saveImage={() => domtoimage.toJpeg(banner.current, { quality: 1 })\r\n            .then(function (dataUrl) {\r\n              const link = document.createElement('a');\r\n              link.download = 'banner.png';\r\n              link.href = dataUrl;\r\n              link.click();\r\n          })}\r\n        />\r\n\r\n        <Drawer isCopyed={state.isCopyed} />\r\n\r\n        <Prewiew \r\n          textColor={state.textColor}\r\n          background={background}\r\n          banner={banner}\r\n          img={state.img}\r\n          text={state.text}\r\n          link={state.link}\r\n        />\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BannerCreator","import './App.css';\nimport BannerCreator from './components/bannerCreator/BannerCreator';\n\nfunction App() {\n  return (\n    <BannerCreator /> \n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}